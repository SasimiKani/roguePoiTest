
// Êïµ„ÇØ„É©„ÇπÁæ§

//// easy Ê£Æ
class EnemyLarvae extends Enemy {
	constructor(x, y) {
		super("„Ç§„É¢„É†„Ç∑", x, y, /* LV */ 1, /* EXP */ 5, /* HP */ 2, /* ATK */ 1, /* DEF */ 2, 'üêõ')
	}
}
class EnemyAnt extends Enemy {
	constructor(x, y) {
		super("„Ç¢„É™", x, y, /* LV */ 1, /* EXP */ 6, /* HP */ 4, /* ATK */ 4, /* DEF */ 4, 'üêú')
	}
}
class EnemyRat extends Enemy {
	constructor(x, y) {
		super("„É©„ÉÉ„Éà", x, y, /* LV */ 1, /* EXP */ 5, /* HP */ 6, /* ATK */ 5, /* DEF */ 6, 'üêÄ')
	}
}
class EnemySlime extends Enemy {
	constructor(x, y) {
		super("„Çπ„É©„Ç§„É†", x, y, /* LV */ 1, /* EXP */ 7, /* HP */ 8, /* ATK */ 7, /* DEF */ 8, 'üü©')
		this.skills = [
			Skill.actionPurupuru(this)
		]
	}
}

//// normal Â±±
class EnemyBat extends Enemy {
	constructor(x, y) {
		super("„Ç≥„Ç¶„É¢„É™", x, y, /* LV */ 1, /* EXP */ 10, /* HP */ 4, /* ATK */ 4, /* DEF */ 4, 'ü¶á')
		this.searchAlgo = (game, startX, startY, targetX, targetY) => SearchAlgorithm.randomRoute(game, startX, startY, targetX, targetY)
	}
}
class EnemyGoblin extends Enemy {
	constructor(x, y) {
		super("„Ç¥„Éñ„É™„É≥", x, y, /* LV */ 1, /* EXP */ 16, /* HP */ 8, /* ATK */ 7, /* DEF */ 8, 'üëπ')
	}
}
class EnemySkeleton extends Enemy {
	constructor(x, y) {
		super("„Çπ„Ç±„É´„Éà„É≥", x, y, /* LV */ 1, /* EXP */ 19, /* HP */ 12, /* ATK */ 10, /* DEF */ 12, 'üíÄ')
	}
}
class EnemySpider extends Enemy {
	constructor(x, y) {
		super("„ÇØ„É¢", x, y, /* LV */ 1, /* EXP */ 18, /* HP */ 16, /* ATK */ 12, /* DEF */ 16, 'üï∑Ô∏è')
	}
}
class EnemyZombie extends Enemy {
	constructor(x, y) {
		super("„Çæ„É≥„Éì", x, y, /* LV */ 1, /* EXP */ 5, /* HP */ 20, /* ATK */ 13, /* DEF */ 20, 'üßü')
	}
}
class EnemyGhost extends Enemy {
	constructor(x, y) {
		super("„Ç¥„Éº„Çπ„Éà", x, y, /* LV */ 1, /* EXP */ 15, /* HP */ 20, /* ATK */ 15, /* DEF */ 20, 'üëª')
	}
}

//// normalPlus Èõ™Âéü
class EnemySnowman extends Enemy {
	constructor(x, y, hp) {
		super("Èõ™„Å†„Çã„Åï„Çì", x, y, /* LV */ 1, /* EXP */ 16, /* HP */ 8, /* ATK */ 13, /* DEF */ 7, '‚õÑÔ∏è')
		this.searchAlgo = (game, startX, startY, targetX, targetY) => SearchAlgorithm.noMove(game, startX, startY, targetX, targetY)
		this.skills = [
			Skill.offensiveSnowBall(this)
		]
	}
}
class EnemyVampire extends Enemy {
	constructor(x, y) {
		super("„Éê„É≥„Éë„Ç§„Ç¢", x, y, /* LV */ 1, /* EXP */ 12, /* HP */ 8, /* ATK */ 23, /* DEF */ 17, 'üßõ')
	}
	takeDamage(damage) {
		super.takeDamage(damage)
		if (this.hp > 0) {
			this.hp += Math.floor(damage * 0.3)
		}
	}
}
class EnemyWizard extends Enemy {
	constructor(x, y) {
		super("„Ç¶„Ç£„Ç∂„Éº„Éâ", x, y, /* LV */ 1, /* EXP */ 25, /* HP */ 12, /* ATK */ 20, /* DEF */ 14, 'üßô')
		this.magicAtk = 8
		this.skills = [ Skill.offensiveMagic(this) ]
	}
}

//// hard ÁÅ´Â±±
class EnemyOgre extends Enemy {
	constructor(x, y) {
		super("„Ç™„Éº„Ç¨", x, y, /* LV */ 1, /* EXP */ 22, /* HP */ 20, /* ATK */ 26, /* DEF */ 20, 'üßå')
	}
}
class EnemyElemental extends Enemy {
	constructor(x, y) {
		super("„Ç®„É¨„É°„É≥„Çø„É´", x, y, /* LV */ 1, /* EXP */ 30, /* HP */ 15, /* ATK */ 30, /* DEF */ 28, 'üî•')
		this.magicResistance = 5
	}
}
class EnemyDragon extends Enemy {
	constructor(x, y) {
		super("„Éâ„É©„Ç¥„É≥", x, y, /* LV */ 1, /* EXP */ 50, /* HP */ 30, /* ATK */ 29, /* DEF */ 26, 'üêâ')
		this.breathAtk = 7
		this.action = this.maxAction = 2
		this.skills = [ Skill.offensiveBreath(this) ]
	}
}

//// hardPlus Êµ∑
class EnemyFish extends Enemy {
	constructor(x, y) {
		super("„Éï„Ç£„ÉÉ„Ç∑„É•", x, y, /* LV */ 1, /* EXP */ 6, /* HP */ 2, /* ATK */ 4, /* DEF */ 1, 'üêüÔ∏è')
	}
}
class EnemyTropicalfish extends Enemy {
	constructor(x, y) {
		super("„Éà„É≠„Éî„Ç´„Éï„Ç£„ÉÉ„Ç∑„É•", x, y, /* LV */ 1, /* EXP */ 7, /* HP */ 1, /* ATK */ 3, /* DEF */ 1, 'üê†')
		this.searchAlgo = (game, sx, sy, tx, ty) =>
			SearchAlgorithm.randomRoute(game, sx, sy, tx, ty)
	}
}
class EnemyCrab extends Enemy {
	constructor(x, y) {
		super("„Ç´„Éã", x, y, /* LV */ 1, /* EXP */ 100, /* HP */ 10, /* ATK */ 5, /* DEF */ 14, 'ü¶Ä')
		this.searchAlgo = (game, startX, startY, targetX, targetY) =>
			SearchAlgorithm.routeFlee(game, startX, startY, targetX, targetY)
		this.action = this.maxAction = 2; // ‰∫åÂõûË°åÂãï
	}
}
class EnemyCrayfish extends Enemy {
	constructor(x, y) {
		super("„Ç∂„É™„Ç¨„Éã", x, y, /* LV */ 1, /* EXP */ 10, /* HP */ 5, /* ATK */ 7, /* DEF */ 5, 'ü¶û')
	}
}
class EnemyHarisenbon extends Enemy {
	constructor(x, y) {
		super("„Éè„É™„Çª„É≥„Éú„É≥", x, y, /* LV */ 1, /* EXP */ 15, /* HP */ 7, /* ATK */ 5, /* DEF */ 7, 'üê°')
	}
}
class EnemyOctopus extends Enemy {
	constructor(x, y) {
		super("„Çø„Ç≥", x, y, /* LV */ 1, /* EXP */ 20, /* HP */ 16, /* ATK */ 12, /* DEF */ 12, 'üêô')
        this.skills = [
            Skill.debuffInk(this)
        ]
	}
}
class EnemySquid extends Enemy {
	constructor(x, y) {
		super("„Ç§„Ç´", x, y, /* LV */ 1, /* EXP */ 22, /* HP */ 18, /* ATK */ 12, /* DEF */ 12, 'ü¶ë')
        this.skills = [
            Skill.debuffInk(this)
        ]
	}
}
class EnemyJellyfish extends Enemy {
	constructor(x, y) {
		super("„ÇØ„É©„Ç≤", x, y, /* LV */ 1, /* EXP */ 25, /* HP */ 20, /* ATK */ 4, /* DEF */ 1, 'ü™º')
		this.searchAlgo = (game, sx, sy, tx, ty) =>
			SearchAlgorithm.randomRoute(game, sx, sy, tx, ty)
	}
}
class EnemyWhales extends Enemy {
	constructor(x, y) {
		super("„ÇØ„Ç∏„É©", x, y, /* LV */ 1, /* EXP */ 30, /* HP */ 15, /* ATK */ 30, /* DEF */ 30, 'üêã')
	}
}
class EnemyShark extends Enemy {
	constructor(x, y) {
		super("„Ç∑„É£„Éº„ÇØ", x, y, /* LV */ 1, /* EXP */ 35, /* HP */ 20, /* ATK */ 22, /* DEF */ 16, 'ü¶à')
		this.action = this.maxAction = 2
	}
}
class EnemyWaterDragon extends Enemy {
	constructor(x, y) {
		super("Ê∞¥Èæç", x, y, /* LV */ 1, /* EXP */ 50, /* HP */ 30, /* ATK */ 29, /* DEF */ 26, 'ü¶ï')
		this.breathAtk = 10
		this.action = this.maxAction = 1
		this.skills = [ Skill.offensiveBreath(this) ]
	}
}
class EnemyFishLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Éï„Ç£„ÉÉ„Ç∑„É•", x, y, /* LV */ 2, /* EXP */ 21, /* HP */ 15, /* ATK */ 14, /* DEF */ 11, 'üêüÔ∏è')
	}
}
class EnemyFishLV3 extends Enemy {
	constructor(x, y) {
		super("„Åã„Å™„ÇäÂº∑„ÅÑ„Éï„Ç£„ÉÉ„Ç∑„É•", x, y, /* LV */ 3, /* EXP */ 36, /* HP */ 30, /* ATK */ 24, /* DEF */ 21, 'üêüÔ∏è')
	}
}
class EnemyTropicalfishLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Éà„É≠„Éî„Ç´„Éï„Ç£„ÉÉ„Ç∑„É•", x, y, /* LV */ 2, /* EXP */ 22, /* HP */ 16, /* ATK */ 13, /* DEF */ 11, 'üê†')
		this.searchAlgo = (game, sx, sy, tx, ty) =>
			SearchAlgorithm.randomRoute(game, sx, sy, tx, ty)
	}
}
class EnemyCrabLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Ç´„Éã", x, y, /* LV */ 2, /* EXP */ 1000, /* HP */ 50, /* ATK */ 25, /* DEF */ 70, 'ü¶Ä')
		this.searchAlgo = (game, startX, startY, targetX, targetY) =>
			SearchAlgorithm.routeFlee(game, startX, startY, targetX, targetY)
		this.action = this.maxAction = 2; // ‰∫åÂõûË°åÂãï
	}
}
class EnemyCrayfishLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Ç∂„É™„Ç¨„Éã", x, y, /* LV */ 2, /* EXP */ 27, /* HP */ 25, /* ATK */ 19, /* DEF */ 18, 'ü¶û')
	}
}
class EnemyHarisenbonLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Éè„É™„Çª„É≥„Éú„É≥", x, y, /* LV */ 2, /* EXP */ 33, /* HP */ 30, /* ATK */ 20, /* DEF */ 20, 'üê°')
	}
}
class EnemyOctopusLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Çø„Ç≥", x, y, /* LV */ 2, /* EXP */ 35, /* HP */ 31, /* ATK */ 22, /* DEF */ 22, 'üêô')
        this.skills = [
            Skill.debuffInk(this)
        ]
	}
}
class EnemySquidLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Ç§„Ç´", x, y, /* LV */ 2, /* EXP */ 37, /* HP */ 33, /* ATK */ 22, /* DEF */ 22, 'ü¶ë')
        this.skills = [
            Skill.debuffInk(this)
        ]
	}
}
class EnemyJellyfishLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„ÇØ„É©„Ç≤", x, y, /* LV */ 2, /* EXP */ 40, /* HP */ 35, /* ATK */ 14, /* DEF */ 11, 'ü™º')
		this.searchAlgo = (game, sx, sy, tx, ty) =>
			SearchAlgorithm.randomRoute(game, sx, sy, tx, ty)
	}
}
class EnemyWhalesLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„ÇØ„Ç∏„É©", x, y, /* LV */ 2, /* EXP */ 45, /* HP */ 30, /* ATK */ 40, /* DEF */ 40, 'üêã')
	}
}
class EnemySharkLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑ„Ç∑„É£„Éº„ÇØ", x, y, /* LV */ 2, /* EXP */ 50, /* HP */ 35, /* ATK */ 32, /* DEF */ 26, 'ü¶à')
		this.action = this.maxAction = 2
	}
}
class EnemyWaterDragonLV2 extends Enemy {
	constructor(x, y) {
		super("Âº∑„ÅÑÊ∞¥Èæç", x, y, /* LV */ 2, /* EXP */ 65, /* HP */ 45, /* ATK */ 39, /* DEF */ 36, 'ü¶ï')
		this.breathAtk = 25
		this.skills = [ Skill.offensiveBreath(this) ]
	}
}